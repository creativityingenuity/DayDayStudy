package com.yt.daydaystudy.demo_greendao.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.yt.daydaystudy.demo_greendao.dao.User;
import com.yt.daydaystudy.demo_greendao.dao.Nan;
import com.yt.daydaystudy.demo_greendao.dao.Nv;

import com.yt.daydaystudy.demo_greendao.greendao.UserDao;
import com.yt.daydaystudy.demo_greendao.greendao.NanDao;
import com.yt.daydaystudy.demo_greendao.greendao.NvDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig userDaoConfig;
    private final DaoConfig nanDaoConfig;
    private final DaoConfig nvDaoConfig;

    private final UserDao userDao;
    private final NanDao nanDao;
    private final NvDao nvDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        nanDaoConfig = daoConfigMap.get(NanDao.class).clone();
        nanDaoConfig.initIdentityScope(type);

        nvDaoConfig = daoConfigMap.get(NvDao.class).clone();
        nvDaoConfig.initIdentityScope(type);

        userDao = new UserDao(userDaoConfig, this);
        nanDao = new NanDao(nanDaoConfig, this);
        nvDao = new NvDao(nvDaoConfig, this);

        registerDao(User.class, userDao);
        registerDao(Nan.class, nanDao);
        registerDao(Nv.class, nvDao);
    }
    
    public void clear() {
        userDaoConfig.clearIdentityScope();
        nanDaoConfig.clearIdentityScope();
        nvDaoConfig.clearIdentityScope();
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public NanDao getNanDao() {
        return nanDao;
    }

    public NvDao getNvDao() {
        return nvDao;
    }

}
